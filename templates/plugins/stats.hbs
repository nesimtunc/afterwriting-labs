<style>
	.plugin-content[plugin="stats"] svg {
		margin: 20px 0 20px 0;
	}
	
</style>
<h1>"Useless" Stats</h1>
<p>Some "useless" statistics about your screenplay. Do you have an idea for a chart? Let me know at
	<a href="mailto:contact@afterwriting.com?Subject=Stats%20idea">contact@afterwriting.com</a>!</p>
<h2 style="margin-top: 30px; margin-left: 0">Who talks with who (by number of scenes)
	<div class="info-icon" section="stats-who" />
</h2>
<p class="info-content" section="stats-who">Each character is represented by a circle (max. 10 characters). If characters are connected with a line that means they are talking in the same scene. Thicker the line - more scenes together. Hover the mouse cursor over a character circle to see how many dialogues scenes that character have with other characters.</p>
<div id="who-with-who" style="text-align: center"></div>
<h2 style="margin-top: 30px; margin-left: 0">Script pulse
	<div class="info-icon" section="stats-tempo" />
</h2>
<p class="info-content" section="stats-tempo">Short scenes and short action/dialogue blocks bump the tempo up. Long scenes and long blocks set it back.</p>
<div id="stats-tempo"></div>
<h2 style="margin-top: 30px; margin-left: 0">Scene length
	<div class="info-icon" section="stats-scene-length" />
</h2>
<p class="info-content" section="stats-scene-length">Each bar represent one scene (white bars for day scenes, black bars for night scenes). Hover the mouse cursor over a bar to see estimated time of a scene. You can click on a bar to jump to selected scene in the editor.</p>
<span>chart colours: </span><select id="stats-scene-length-type">
	<option value="day_night">DAY/NIGHT</option>
	<option value="int_ext">INT./EXT.</option>
</select>
<div id="stats-scene-length" width="100%"></div>
<h2 style="margin-top: 30px; margin-left: 0">Locations breakdown
	<div class="info-icon" section="stats-locations-breakdown" />
</h2>
<p class="info-content" section="stats-locations-breakdown">Blocks on the top strip represent amount of time spent in a location. If a location occurs more than once in the script, it's highlighted by a colour (white colour is used for each location occurringonly once).
	<br />Pie chart below shows time distribution for each location. Mouse over the blocks to see corresponding data on the pie chart (and vice versa).</p>
<div id="locations-breakdown" />
<h2 style="margin-top: 30px; margin-left: 0">Page balance
	<div class="info-icon" section="stats-page-balance" />
</h2>
<p class="info-content" section="stats-page-balance">Shows balance between action time and dialogue time on each page. Click on a page to jump to the editor.</p>
<div id="stats-page-balance"></div>
<h2 style="margin-top: 30px; margin-left: 0">Days and nights
	<div class="info-icon" section="stats-days-nights" />
</h2>
<p class="info-content" section="stats-days-nights">Pie chart representing day vs night scenes breakdown. Hover over sections to see number of day/night scenes.</p>
<div id="stats-days-and-nights" style="text-align: center"></div>
<h2 style="margin-top: 30px; margin-left: 0">INT. vs EXT.
	<div class="info-icon" section="stats-int-ext" />
</h2>
<p class="info-content" section="stats-int-ext">Pie chart representing interior vs exterior scenes breakdown. Hover over sections to see number of int/ext scenes.</p>
<div id="stats-int-ext" style="text-align: center"></div>
<!--- scripts -->
<script>
	require(['jquery', 'd3', 'plugins/stats', 'plugins/layout', 'utils/helper', 'modules/charts'], function($, d3, stats, layout, helper, charts) {

		var render = function() {
			charts.spider_chart.render('#who-with-who', stats.data.who_with_who.characters, stats.data.who_with_who.links, {
				label: 'name'
			});

			charts.bar_chart.render('#stats-scene-length', stats.data.scenes, {
				tooltip: function(d) {
					return d.header + ' (time: ' + helper.format_time(helper.lines_to_minutes(d.length, stats.lines_per_page())) + ')'
				},
				value: 'length',
				color: function(d) {
					if ($('#stats-scene-length-type').val() === "int_ext") {
						if (d.location_type === 'mixed') {
							return '#777777';
						} else if (d.location_type === 'int') {
							return '#eeeeee';
						} else if (d.location_type === 'ext') {
							return '#111111';
						} else if (d.location_type === 'other') {
							return '#444444';
						}
					}

					if (d.type == 'day') {
						return '#eeeeee';
					} else if (d.type == 'night') {
						return '#222222';
					} else {
						return '#777777';
					}
				},
				bar_click: function(d) {
					if (!layout.small) {
						stats.goto(d.token.line);
					}
				}
			});

			charts.pie_chart.render('#stats-days-and-nights', stats.data.days_and_nights, {
				tooltip: function(d) {
					return d.data.label + ': ' + d.data.value + (d.data.value == 1 ? ' scene' : ' scenes')
				},
				value: 'value',
				color: function(d) {
					if (d.data.label == 'DAY') {
						return '#eeeeee';
					} else if (d.data.label == 'NIGHT') {
						return '#222222';
					} else if (d.data.label == 'DAWN') {
						return '#777777';
					} else if (d.data.label == 'DUSK') {
						return '#444444';
					} else {
						return '#aaaaaa';
					}
				}
			});

			var int_ext_labels = {
				int: 'INT.',
				ext: 'EXT.',
				mixed: 'INT./EXT.',
				other: 'OTHER'
			};

			charts.pie_chart.render('#stats-int-ext', stats.data.int_and_ext, {
				tooltip: function(d) {
					return int_ext_labels[d.data.label] + ': ' + d.data.value + (d.data.value == 1 ? ' scene' : ' scenes')
				},
				value: 'value',
				color: function(d) {
					if (d.data.label == 'mixed') {
						return '#777777';
					} else if (d.data.label == 'int') {
						return '#eeeeee';
					} else if (d.data.label == 'ext') {
						return '#111111';
					} else if (d.data.label == 'other') {
						return '#444444';
					}
				}
			});

			charts.page_balance_chart.render('#stats-page-balance', stats.data.page_balance, {
				page_click: function(d) {
					if (!layout.small) {
						stats.goto(d.first_line.token.line);
					}
				}
			});

			charts.line_chart.render('#stats-tempo', stats.data.tempo, {
				value: 'tempo',
				tooltip: function(d, i) {
					if (i === stats.data.tempo.length - 1) {
						return '';
					}
					return d.scene + '<br />...' + d.line + '... ';
				},
				click: function(d) {
					if (!layout.small) {
						stats.goto(d.line_no);
					}
				}
			});

			charts.locations_breakdown.render('#locations-breakdown', stats.data.locations_breakdown);

		}

		stats.refresh.add(render);
		$('#stats-scene-length-type').on('change', render);
		
		layout.toggle_expand.add(function() {
			if (stats.is_active) {
				render();
			}
		});

	});
</script>